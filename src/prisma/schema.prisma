// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DEV_DATABASE_URL")
}

model User {
  id       Int        @id @default(autoincrement())
  clerkid  String        @unique
  email    String?
  name     String
  username String?    @unique
  scores   UserQuiz[]
}

model UserQuiz {
  id        Int      @id @default(autoincrement())
  userid    Int
  user      User     @relation(fields: [userid], references: [id])
  quizid    Int
  quiz      Quiz     @relation(fields: [quizid], references: [id])
  score     Int
  timetaken DateTime @default(now())
}

model Quiz {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  questions Question[]
  scores    UserQuiz[]
}

model Question {
  id             Int              @id @default(autoincrement())
  question       String           @unique
  questionType   String?
  quizid         Int?
  quiz           Quiz?            @relation(fields: [quizid], references: [id])
  answer         String?
  QuestionChoice QuestionChoice[]
}

model KoreanAlphabet {
  id           Int     @id @default(autoincrement())
  letter       String
  romanization String
  isVowel      Boolean
}

model QuestionChoice {
  id         Int      @id @default(autoincrement())
  choiceid   Int
  choice     Choice   @relation(fields: [choiceid], references: [id])
  questionid Int
  question   Question @relation(fields: [questionid], references: [id])
}

model Choice {
  id              Int              @id @default(autoincrement())
  choice          String           @unique
  QuestionChoices QuestionChoice[]
}
